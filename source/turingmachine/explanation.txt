Our Turing Machine works by comparing the leftmost string to each subsequent 
string, one at a time.  If we encounter two strings which are the same at
some point, we reject.  Otherwise, if there is another string after the one 
that we just determined is not a match, we check the leftmost string against 
this succeeding string.  Otherwise, if there are no more such strings, we 
know that the first string is different from each other string in the 
sequence, and we may change that string to all 'delta' characters and repeat 
the process starting with the next string (the one which is now the leftmost 
string).  

The following is pseudocode for this process:



##### BEGIN_PROGRAM #####

PREMASSAGE_DATA_SECTION:
Ensure that there are not two consecutive empty strings
Ensure that there are not any two empty strings
If there is only a single empty string:
	Remove the left of the two '#' marks signifying its presence
	Shift the portion of the input string to the left of this '#' to 
		the right so we don't have to worry about it.

START_COMPARING_A_NEW_FIRST_STRING_SECTION:
Change first '#' to 'delta'

If there are no strings after the leftmost string:
	Accept

MASSAGE_DATA_SECTION:
Change all characters in leftmost first string 
	from '0' to 'a', from '1' to 'b'

COMPARE_PAIR_OF_STRINGS_SECTION:
Move right until find a '#' or 'delta'
If you find a '#':
	Change all characters in the succeeding string from 
		'0' to 'x' and from '1' to 'y'
	Compare each char in the first string with the corresponding char
		in the string found to the right of the '#'
	If all chars in these two strings are the same:
		Reject
	Else:
		Change the hash immediately preceding this string to 's'
		Change any chars from 'a','x' to '0' or from 'b','y' to '1'
		Goto COMPARE_PAIR_OF_STRINGS_SECTION

If you find a 'delta':
	Change all chars in the first string to 'delta'
	Change any chars from 'a','x' to '0' or from 'b','y' to '1'
	Change all 's' to '#'
	Goto START_COMPARING_A_NEW_FIRST_STRING_SECTION

##### END_PROGRAM #####
